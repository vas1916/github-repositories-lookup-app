{"version":3,"sources":["API/services.ts","Components/Header.tsx","Styles/styles.ts","Components/ListItemLink.tsx","Components/UserDisplay.tsx","Components/RepositoryList.tsx","Components/Repositories.tsx","Components/ScrollTop.tsx","Components/Home.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["username","a","response","axios","get","headers","Authorization","Header","Box","AppBar","position","Typography","align","variant","color","styles","user","marginTop","avatar","height","width","reposTitle","repos","marginLeft","marginBottom","marginRight","stars","paddingRight","ListItemLink","props","ListItem","alignItems","component","useStyles","makeStyles","UserDisplay","classes","userId","useParams","className","justifyContent","flexDirection","display","Avatar","alt","src","href","target","RepositoryList","repositories","alignContent","flexWrap","map","item","m","p","full_name","Card","CardContent","name","description","stargazers_count","language","id","Repositories","useState","isLoaded","setIsLoaded","setRepositories","getRepositories","getRepos","then","data","setTimeout","catch","useEffect","length","CircularProgress","transitionTop","bottom","right","ScrollTop","children","window","trigger","useScrollTrigger","undefined","disableHysteresis","threshold","Zoom","in","onClick","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Home","setUser","getUser","Toolbar","login","Fab","size","Skeleton","App","console","log","process","OAUTH_SECRET","apiKey","REACT_APP_APIKey","apiSecret","REACT_APP_APISecret","basename","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ac5ab1c9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport async function getUser(username: string) {\n  const response = axios.get(\n    `https://api.github.com/users/${username}`,\n    {\n      headers: {\n        Authorization: 'token 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'\n      }\n    }\n  );\n  return response;\n}\n\nexport async function getRepos(username: string) {\n  const response = axios.get(\n    `https://api.github.com/users/${username}/repos`,\n    {\n      headers: {\n        Authorization: 'token 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'\n      }\n    }\n  );\n  return response;\n}\n\n\n","import { FunctionComponent } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { AppBar,Typography } from \"@material-ui/core\";\n\nexport const Header : FunctionComponent = ()=> {\n    return(\n        <Box>\n            <AppBar position=\"static\">\n                <Typography align= \"center\" variant=\"h6\" color=\"inherit\">\n                    Welcome to Git hub Repositories Finder app\n                </Typography>\n            </AppBar>\n        </Box>\n    )\n\n}","export const styles={\n    user:{\n        marginTop:10\n    },\n    avatar: { \n        height: '100px', \n        width: '100px' \n    },\n    reposTitle:{\n        marginTop:30\n    },\n    repos:{\n        marginLeft:100,\n        marginBottom:50,\n        marginRight:50\n    },\n    stars: {\n        paddingRight:20,  \n    },\n}","import React, { FunctionComponent } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { ListLink } from \"../Types/UserRepositoriesTypes\";\n\nexport const ListItemLink:FunctionComponent<ListLink> = (props) => <ListItem alignItems=\"center\"  component=\"a\" {...props} />;\n","import React, { FunctionComponent } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport { styles } from '../Styles/styles';\nimport { useParams } from 'react-router-dom';\nimport { ListItemLink } from './ListItemLink';\n\n\nconst useStyles = makeStyles(styles);\n\n  export const UserDisplay : FunctionComponent=()=>{\n    const classes = useStyles();\n    const {userId} = useParams<{userId: string}>();\n    return(\n        <Box className={classes.user}alignItems=\"center\" justifyContent=\"center\" flexDirection=\"row\" display=\"flex\"  >\n            <Avatar className={classes.avatar} alt=\"Remy Sharp\" src= {`https://avatars.githubusercontent.com/${userId}`} />\n            <Typography variant=\"h3\" align=\"center\" display=\"inline\"> \n                <ListItemLink align=\"center\" href={`https://www.github.com/${userId}`} target={'_blank'} >\n                    {userId}   \n                </ListItemLink>\n            </Typography>                      \n        </Box>\n      \n    )\n}\n\n\n","import React ,{FunctionComponent} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { Box } from '@material-ui/core';\nimport { ListItemLink } from './ListItemLink';\nimport { Repository, RepositoryListProps } from '../Types/UserRepositoriesTypes';\nimport { styles } from '../Styles/styles';\n\nconst useStyles = makeStyles(styles);\n\nexport const  RepositoryList:FunctionComponent<RepositoryListProps> =({repositories=[]})=>{\n    const classes = useStyles();\n    return (\n        <>\n            <Box className={classes.reposTitle} alignItems=\"center\" alignContent=\"center\">\n                <Typography color=\"primary\" align=\"center\" variant=\"h4\">\n                    @Repositories@\n                </Typography>\n            </Box>\n            <Box className={classes.repos} flexDirection=\"row\" display=\"flex\"  flexWrap=\"wrap\">\n                {repositories?.map((item:Repository)=>(\n                    <Box key={item.id} m={0} p={0}>\n                        <ListItemLink  href={`http://www.github.com/${item.full_name}`} target={'_blank'} >\n                            <Card >\n                                <CardContent>\n                                    <Typography variant=\"h5\" color=\"textPrimary\" >\n                                        {\n                                                item.name ?\n                                                `Repository Name : ${item.name}`:\n                                                `Repository Name : No Repo name found`\n                                        }\n                                    </Typography>\n                                    <Typography variant=\"h6\" >\n                                        {\n                                            item.description?\n                                            `Description : ${item.description}`:\n                                            'Description : No Discription found'\n                                        }\n                                    </Typography>\n                                    <Box>\n                                        <Typography display=\"inline\" variant=\"body2\" className={classes.stars} >\n                                            {\n                                                item.stargazers_count?\n                                                `Stars : ${item.stargazers_count}`:\n                                                'Stars : No Stars'\n                                            }\n                                    \n                                        </Typography>\n                                        <Typography display=\"inline\" variant=\"body2\" component=\"p\">\n                                        {\n                                            item.language?\n                                            `Langueage'(s)  : ${item.language}`:\n                                            `Langueage'(s) : No Languages`\n                                        }\n                                    \n                                        </Typography>\n                                    </Box>\n                                </CardContent>\n                            </Card>\n                        </ListItemLink>\n                    </Box>\n            ))}\n            </Box>\n        </>\n   )\n}\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { getRepos } from '../API/services';\nimport { User } from '../Types/UserRepositoriesTypes';\nimport { RepositoryList } from './RepositoryList';\n\nexport const Repositories: FunctionComponent<User> = (props) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [repositories, setRepositories] = useState([]);\n  \n  const getRepositories = () => {\n  \n    getRepos(props.user).then((response)=>{\n      setRepositories(response.data);\n      setIsLoaded(true);\n      //added below line to achieve polling\n      setTimeout(getRepositories, 15000);\n    }).catch(\n      ()=>{\n        setRepositories([]);\n      setIsLoaded(true);\n      }\n    );\n\n    }\n  \n  useEffect(() => {\n    if (props.user) getRepositories();\n  }, [props.user]);\n  \n  if (!isLoaded) {\n    return (\n      <Box>\n        <CircularProgress />\n      </Box>\n    );\n  }\n  \n  return (\n    <>\n      {repositories.length > 0 ? (\n        <RepositoryList repositories={repositories} />\n      ) : (\n        <>No repositories found for given user</>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { makeStyles, useScrollTrigger, Zoom } from \"@material-ui/core\";\nimport { ScrollType } from \"../Types/UserRepositoriesTypes\";\n\nconst useStyles = makeStyles(() => ({\n    transitionTop: {\n      position: 'fixed',\n      bottom: 20,\n      right:20, \n    },\n  }));\n\nexport function ScrollTop(props:ScrollType){\n    const { children, window } = props;\n    const classes = useStyles();\n    const trigger = useScrollTrigger({\n        target: window ? window() : undefined,\n        disableHysteresis: true,\n        threshold: 100,\n    });\n\n    const handleClick = (event:any) => {\n        const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\n\n        if (anchor) {\n        anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        }\n    };\n\n    return (\n        <Zoom in={trigger}>\n            <div onClick={handleClick} role=\"presentation\" className={classes.transitionTop}>\n            {children}\n            </div>\n        </Zoom>\n        );\n}","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React, { FunctionComponent , useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getUser } from \"../API/services\";\nimport Box from \"@material-ui/core/Box\";\nimport { Header } from \"./Header\";\nimport { UserDisplay } from \"./UserDisplay\";\nimport { Repositories } from \"./Repositories\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { ScrollTop } from \"./ScrollTop\";\n\nexport const Home : FunctionComponent = ()=>{\n    const [isLoaded, setIsLoaded]=useState(false);\n    const [user,setUser]=useState<{login: string} | null>(null);\n    const {userId} = useParams<{userId: string}>();    \n    useEffect(()=>{  \n        getUser(userId).then((response)=>{\n            setUser(response.data);\n            setIsLoaded(true);\n        }).catch(\n            ()=>{\n                setIsLoaded(true);\n                setUser(null);\n            }\n        )\n    },[userId]);\n\n    if(!isLoaded){\n        return  <CircularProgress /> \n    }\n    return <>\n        {user? <>\n                <Header />\n                <Toolbar id=\"back-to-top-anchor\" />\n                <UserDisplay /> \n                <Repositories user={user.login}/>\n                <ScrollTop >\n                <Fab color=\"secondary\" size=\"small\">\n                    <KeyboardArrowUpIcon />\n                </Fab>\n                </ScrollTop>\n            </>: \n                <Box alignItems=\"center\" justifyContent=\"center\" flexDirection=\"row\" display=\"flex\"  >\n                    <Skeleton variant=\"circle\" width={80} height={80} />\n                    <Skeleton width={150} height={50}>No such user found</Skeleton>\n                </Box>\n        }\n    </>\n}","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Home } from './Components/Home';\n\nfunction App() {\n  console.log(\"@@@@@@OAUTH_SECREsecrets.T,\", process.env, process.env.OAUTH_SECRET)\n  const apiKey = process.env.REACT_APP_APIKey\n  const apiSecret = process.env.REACT_APP_APISecret\n  console.log(\"@@@@: \", apiKey, apiSecret);\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/:userId\">\n              <Home />\n          </Route>\n        </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config()\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}